user root;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
  worker_connections  1024;
}


http {
  include       /etc/nginx/mime.types;

  default_type  application/octet-stream;

  log_format json_combined escape=json
        '{'
          '"time_local":"$time_local",'
          '"msec":"$msec",'
          '"remote_addr":"$remote_addr",'
          '"request_method":"$request_method",'
          '"request":"$request",'
          '"status": "$status",'
          '"request_time":"$request_time",'
          '"request_length":"$request_length",'
          '"bytes_sent":"$bytes_sent",'
          '"body_bytes_sent":"$body_bytes_sent",'
          '"http_user_agent":"$http_user_agent",'
          '"http_referrer":"$http_referer",'
          '"remote_user":"$remote_user",'
          '"upstream_addr":"$upstream_addr",'
          '"upstream_status":"$upstream_status",'
          '"upstream_response_time":"$upstream_response_time",'
          '"upstream_connect_time":"$upstream_connect_time",'
          '"upstream_header_time":"$upstream_header_time"'
        '}';
        
      access_log  /var/log/nginx/access.log  json_combined;

  sendfile        on;
  #tcp_nopush     on;

  keepalive_timeout  65;

  gzip  on;

  client_body_buffer_size 64K;
  client_header_buffer_size 64k;
  client_max_body_size 4M;
  large_client_header_buffers 4 512k;

  absolute_redirect off;

  server {
    listen 80;
    listen 443 ssl;                                                                   #TEMPLATE_MARK_SSL
                                                                                      #TEMPLATE_MARK_SSL
    ssl_certificate    /etc/ssl/server.<SSL_CERT_TYPE>;                               #TEMPLATE_MARK_SSL
    ssl_certificate_key  /etc/ssl/server.key;                                         #TEMPLATE_MARK_SSL
                                                                                      #TEMPLATE_MARK_SSL
    # Redirect all non-SSL traffic to SSL.                                            #TEMPLATE_MARK_SSL
    if ($ssl_protocol = "") {                                                         #TEMPLATE_MARK_SSL
      rewrite ^ https://$host$request_uri? permanent;                                 #TEMPLATE_MARK_SSL
    }                                                                                 #TEMPLATE_MARK_SSL

    resolver 127.0.0.11;

    location / {
      proxy_set_header Accept-Encoding "";
      proxy_pass http://ui:3000/;                                               #TEMPLATE_MARK_PROD_MODE
      proxy_pass http://<HOST_IP>:3000/;                                              #TEMPLATE_MARK_DEV_MODE
    }

    location = /api/v1 {
      return 302 /api/v1/;
    }

    location /api/v1 {
      proxy_set_header Accept-Encoding "";
      proxy_pass http://backend:3030$request_uri;                                #TEMPLATE_MARK_PROD_MODE
      proxy_pass http://<HOST_IP>:3030$request_uri;                                   #TEMPLATE_MARK_DEV_MODE
      client_max_body_size 1m;
    }

    location /apex-api {
      proxy_set_header Accept-Encoding "";
      proxy_pass http://backend:3030$request_uri;                                #TEMPLATE_MARK_PROD_MODE
      proxy_pass http://<HOST_IP>:3030$request_uri;                                   #TEMPLATE_MARK_DEV_MODE
      client_max_body_size 1m;
    }

    location = /websocket {
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_http_version 1.1;
      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # proxy_set_header Host $host;
      proxy_pass http://backend:3030/websocket;                                  #TEMPLATE_MARK_PROD_MODE
      proxy_pass http://<HOST_IP>:3030/websocket;                                     #TEMPLATE_MARK_DEV_MODE
    }

    # Websocket for UI nodejs auto-reload on recompile (required for debugging only)  #TEMPLATE_MARK_DEV_MODE
    location /sockjs-node {                                                           #TEMPLATE_MARK_DEV_MODE
      proxy_set_header Upgrade $http_upgrade;                                         #TEMPLATE_MARK_DEV_MODE
      proxy_set_header Connection "upgrade";                                          #TEMPLATE_MARK_DEV_MODE
      proxy_http_version 1.1;                                                         #TEMPLATE_MARK_DEV_MODE
      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;                  #TEMPLATE_MARK_DEV_MODE
      # proxy_set_header Host $host;                                                  #TEMPLATE_MARK_DEV_MODE
      proxy_pass http://<HOST_IP>:3000/sockjs-node;                                   #TEMPLATE_MARK_DEV_MODE
    }                                                                                 #TEMPLATE_MARK_DEV_MODE
  }
}
